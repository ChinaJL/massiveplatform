<?php

/* 

Custom module for iflychat integration
This also requires drupalchat module (custom)

Install instructions
- install drupalchat

Settings
- /admin/config/drupalchat/configuration
- Choose Polling Method - iFlyChat
- Show DrupalChat on specific pages:

(replace \/ with /)

admin/*
user/*\/edit
node/*\/edit
community
companies
events
sponsors
contact
*\/contact
payment\/*
events/send-announcement/*

- Relationship method - All Users
- Enable PHP Session Caching - No
- Configure permissions at /admin/people/permissions
*/

/**
 * Implement hook_menu
 */
function tm_chat_menu() {

	$items = array();

	// configurable menu path
	global $conf;
	$chat_menu_path = "chat"; // default
	if (isset($conf["tm_chat_embed_menu_path"])) {
		$chat_menu_path = $conf["tm_chat_embed_menu_path"];
	}

	$items[$chat_menu_path] = array(
		'title' => '',
		'page callback' => 'tm_chat_embed',
		'access arguments' => array('access content')
	);

   return $items;
}


/**
 * Check permission to chat room
 */
function tm_chat_check_permission($roles = array()) {

	global $user;
	global $conf;

	foreach ($conf["tm_chat_embed_access_roles"] as $role) {
		if (in_array($role, $user->roles)) {
			return TRUE;
		}
	}

	return FALSE;

}

/**
 * Embed chat
 */
function tm_chat_embed() {

	global $conf;
	global $user;

	// friendly check permission
	if (!tm_chat_check_permission($user->roles)) {
		if (!user_is_logged_in()) {
			drupal_set_message('Please sign in to access the chat room.');
		} else {
			drupal_set_message('Sorry, you don\'t have permission to access the chat room right now.');
		}
		drupal_goto("/");
		return;
	}

	$chat_menu_path = "chat"; // default
	if (isset($conf["tm_chat_embed_menu_path"])) {
		$chat_menu_path = $conf["tm_chat_embed_menu_path"];
	}

	// load user
	$loaded = user_load($user->uid);

	$max_width = "100%";
	if (isset($conf["tm_chat_embed_side_panel_html"])) {
		$max_width = "800px";
	}

	$embed_script  = '<div class="tm_chat_container">';
	$embed_script  .= '<div class="tm_chat_container_drupalchat" style="float: left; max-width: ' . $max_width . '; width: 100%; margin-right: 24px; margin-bottom: 16px;" >';
	$embed_script .= '<div class="iflychat-embed" data-room-id="' . $conf["tm_chat_embed_room_id"] . '" data-height="500px" data-width="100%"></div>';
	$embed_script .= '</div>';

	// add side panel if set
	if (isset($conf["tm_chat_embed_side_panel_html"])) {
		$embed_script .= '<div class="tm_chat_container_side_panel" style="min-width: 200px; overflow: auto; background-color: #fff; border-radius: 4px; box-shadow: 0 0.125rem 0 0 rgba(33,48,64,.1); padding: 0.5rem; padding-left: 1rem; padding-top: 0; font-size: 0.9rem;">' . $conf["tm_chat_embed_side_panel_html"] . '</div>';
	}
	$embed_script .= '</div>';

	// hide title
	drupal_add_css('#page-title { display: none; }', 'inline');
	drupal_set_title("Chat");

	return $embed_script;

}


/**
 * Check user's privacy setting if the have disabled chat
 */
function tm_chat_init() {

	global $conf;
	global $user;

	// allow admin to edit settings if they have disabled chat
	if (current_path() == "admin/config/drupalchat/configuration") {
		return;
	}

	$account = user_load($user->uid);

	// if user is approved and checked field_user_disable_chat, disable chat
	if (in_array("approved user", $account->roles)) {
		if (isset($account->field_user_disable_chat[LANGUAGE_NONE][0]['value'])) {
			if ($account->field_user_disable_chat[LANGUAGE_NONE][0]['value'] == 1) {


				// add * wildcard to disable path_pages
				if (isset($conf["drupalchat_path_pages"])) {

					$conf["drupalchat_path_visibility"] = 1; // only show on selected pages
					$conf["drupalchat_path_pages"] = "/chatdisabled"; // don't show on any pages

				}

			}
		}
	}
}

/**
 * Allow users to see other members in their chapter
 * see: https://github.com/iflylabs/iflychat-documentation/blob/master/integration/drupal-7/hooks-implementation.md
 */
function tm_chat_drupalchat_get_groups_alter(&$user_groups, $id) {

	$account = user_load($id);

	// create group for each chapter
	$chapters = tm_users_get_chapters($account);
	foreach ($chapters as $nid) {
		$chapter = node_load($nid);

		// connect approved members in chapter
		if (in_array("approved user", $account->roles)) {
			$user_groups['chapter-' . $nid] = $chapter->title; // tm_chapters_formal_name($chapter);
		}

	}

	// add chapter leaders to own group
	if (in_array("chapter leader", $account->roles)) {
		$user_groups['chapter-leader'] = "Chapter Leaders";
	}

}

/**
 * Get avatar url
 */
function tm_chat_drupalchat_get_user_avatar_url_alter(&$user_avatar_url, $id) { 

	global $conf;

	// load user
	$account = user_load($id);
	if ($account == null) {
		return;
	}

	// user_avatar_uri
	if (empty($account->field_avatar)) {
		$img_uri = $conf["tm_images_default_field_avatar"];
	}  else {
		$img_uri = $account->field_avatar[LANGUAGE_NONE][0]['uri'];
	}

	// If image is default, replace with random image from folder
	if (isset($conf["tm_images_default_path"])) {
		if ($img_uri == $conf["tm_images_default_field_avatar"]) {
			$image_id = $account->uid;
			$cover_files = $conf["tm_images_default_avatar"];
			$image_index = $image_id % sizeof($cover_files);
			$img_uri = $conf["tm_images_default_path"] . $cover_files[$image_index];
		}
	}

	$user_avatar_url = image_style_url("avatar", $img_uri);
}

/**
 * Get profile url
 */
function tm_chat_drupalchat_get_user_profile_alter(&$user_profile_url, $id) {

        // user_profile_uri
        $user_profile_url = url('user/' . $id);
}

/**
 * Change weight of drupalchat module so it executes after tm_chat
 */
function tm_chat_install() {
	print "Updating drupalchat module weight to 10...";
    db_update('system')
    ->fields(array('weight' => 10))
    ->condition('name', 'drupalchat', '=')
    ->execute();
}

?>