<?php
/**
 * @file
 * Code for the TM Theme feature.
 */

include_once 'tm_theme.features.inc';

// Alter html head
// Remove shortlink metatags to node/123
// from: https://gist.github.com/Dreamseer/3865185
function tm_theme_html_head_alter(&$head_elements) {
  
  global $conf;

  // remove unneeded shortlink url
  $remove = array(
    '/^drupal_add_html_head_link:shortlink:/',     // Shortlink
  );
  foreach ($remove as $item) {
    foreach (preg_grep($item, array_keys($head_elements)) as $key) {
      unset($head_elements[$key]);
    }
  }

  // add noindex to /node or /user URLS
  // all URLs we want indexed should be clean URLS
  $url_parts = explode('/', request_uri());
  if (($url_parts[1] == 'node') or ($url_parts[1] == 'user')) {
  	$head_elements['MYMODULE_meta_robots'] = array(
  		'#tag' => 'meta',
  		'#type' => 'html_tag',
  		'#attributes' => array(
  		'name' => 'robots',
  		'content' => 'noindex'
  		)
  	);
  }

  // if front page add vid js for background video
  if (drupal_is_front_page()) {
    drupal_add_js(drupal_get_path('theme', 'tm') . '/js/jquery.vide.min.js', array('group' => JS_THEME));
  }

  // add impromptu js for better alert box handling
  // see: http://trentrichardson.com/Impromptu/
  // https://github.com/trentrichardson/jQuery-Impromptu
  drupal_add_js(drupal_get_path('theme', 'tm') . '/js/jquery-impromptu.js', array('group' => JS_THEME));

  drupal_add_css(drupal_get_path('theme', 'tm') . '/css/jquery-impromptu.css', array('group' => CSS_THEME));

  // impromptu pure css theme effects admin theme
  // allow on /user for profile editing
  if (!path_is_admin(current_path()) or ($url_parts[1] == "user")) {
    drupal_add_css(drupal_get_path('theme', 'tm') . '/css/jquery-impromptu.pure.css', array('group' => CSS_THEME));
  }

  // if not front page add sticky header
  // also ignore node or user edit pages as account menu is obscured when using sticky header
  if (!drupal_is_front_page()) {
    drupal_add_js(drupal_get_path('theme', 'tm') . '/js/jquery.sticky.js', array('group' => JS_THEME));
  }

  // add EU cookie consent
  // https://silktide.com/tools/cookie-consent
  if (isset($conf["tm_cookieconsent_enable"])) {
    if ($conf["tm_cookieconsent_enable"] == true) {

      $privacy_url = $conf["tm_cookieconsent_privacy_url"];
      drupal_add_js(drupal_get_path('theme', 'tm') . '/js/cookieconsent.v2.min.js', array('group' => JS_THEME));
      drupal_add_js('window.cookieconsent_options = {"message":"We use cookies to ensure you get the best experience on our website. ","dismiss":"Ok","learnMore":"Learn more","link":"' . $privacy_url . '","theme":"dark-bottom"};', 'inline');
    }
  }


}

/**
 * Add html meta tags
 */
function tm_theme_preprocess_html(&$variables, $hook) {

  global $conf;

  if (!drupal_is_front_page()) {
    return;
  }
  
  // add tag
  $variables['classes_array'][] = "tm_discuss";

  // gererate canonical url
  $canonical = url('/', array('absolute' => TRUE)) . "/";

  // canonical url
  $meta = array(
    '#tag' => 'link', 
    '#attributes' => array(
      'rel' => 'canonical', 
      'href' => $canonical,
    ),
  );
  drupal_add_html_head($meta, 'canonical');

  // og:url
  $meta = array(
    '#tag' => 'meta', 
    '#attributes' => array(
      'name' => 'og:url', 
      'content' => $canonical,
    ),
  );
  drupal_add_html_head($meta, 'og:url');

  // og:title
  if (isset($conf['tm_frontpage_meta_og_title'])) {
    $meta = array(
      '#tag' => 'meta', 
      '#attributes' => array(
        'name' => 'og:title', 
        'content' => $conf['tm_frontpage_meta_og_title'],
      ),
    );
    drupal_add_html_head($meta, 'og:title');
  }

  // og:image
  if (isset($conf['tm_frontpage_meta_og_image'])) {
    if ($conf['tm_frontpage_meta_og_image'] != "") {
        $meta = array(
        '#tag' => 'meta', 
        '#attributes' => array(
          'name' => 'og:image', 
          'content' => $conf['tm_frontpage_meta_og_image'],
        ),
      );
      drupal_add_html_head($meta, 'og:image');
    }
  }

  // description
  if (isset($conf['tm_frontpage_meta_description'])) {
    $meta = array(
      '#tag' => 'meta', 
      '#attributes' => array(
        'name' => 'description',
        'property' => 'og:description',
        'content' => $conf['tm_frontpage_meta_description'],
      ),
    );
    drupal_add_html_head($meta, 'description');
  }
}
