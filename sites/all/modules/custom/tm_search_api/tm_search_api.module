<?php
/**
 * @file
 * Code for the TM Search API feature.
 */

include_once 'tm_search_api.features.inc';
include_once 'includes/callback_role_filter_multi.inc';
include_once 'includes/tm_search_api_excerpt.php';

include_once 'tm_search_api.search.inc';
include_once 'tm_search_api.display.inc';


/* 
This module implements a search_api_db based search.

Helpful Resources:
http://drupal.stackexchange.com/questions/107345/programmatical-use-of-search-api
http://enzolutions.com/articles/2015/06/10/how-to-customize-a-search-api-filters-in-drupal-7/
https://www.drupal.org/project/search_api_multi
http://drupal.stackexchange.com/questions/118282/how-to-search-both-users-and-nodes-simultaneously-in-drupal-7
https://www.phase2technology.com/blog/expanding-indexed-content-with-search-api-data-alterations/
https://www.drupal.org/node/2043339#comment-7654017 (search_api_db doesn't support phrase searches)
*/

/**
 * Implements hook_menu().
 */
function tm_search_api_menu_alter(&$items) {

  	// Add our own custom search 
  	// If search module enabled, this will override the path

	$items["search"] = array(
        'title' => "Search",
        'description' => "Search Page",
        'page callback' => 'tm_search_api_view',
        'page arguments' => array('tm_search_api_page_view'),
        'access callback' => 'tm_search_api_page_access',
        'type' => MENU_CALLBACK,
      );

 	$items['search/results'] = array(
 	  'page callback' => 'tm_search_api_ajax',
      'access arguments' => array('access content')

   	);
}

/**
 * Implements hook_search_api_alter_callback_info().
 */
function tm_search_api_search_api_alter_callback_info() {

	$callbacks['search_api_alter_role_filter_multi'] = array(
		'name' => t('Role filter (Multi-index)'),
		'description' => t('Exclude users from indexing based on their role (multi-index).'),
		'class' => 'SearchApiAlterRoleFilterMulti',
		// Filters should be executed first.
		'weight' => -10,
	);

	return $callbacks;
}

/* Search access */
function tm_search_api_page_access() {
	return true;
}


