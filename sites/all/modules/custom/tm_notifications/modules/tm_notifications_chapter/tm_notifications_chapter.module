<?php
/**
 * @file
 * Code for the TM Notifications Chapter feature.
 */

include_once 'tm_notifications_chapter.features.inc';

/**
 * Implements hook_tm_notif_info()
 */
function tm_notifications_chapter_tm_notif_info() {
  $notification = array();

  $notification['user_chapter_join_welcome_member'] = array(
    'title' => 'Member joined chapter',
    'description' => 'Send the member a welcome message when joining a chapter.',
    'use_cron' => FALSE,
    'tokens' => array(
      // The token types that have specific context. Can be multiple token types like 'term' and/or 'user'
      'token_types' => array('node', 'current-user'),
      // A boolean TRUE or FALSE whether to include 'global' context tokens like [current-user:*] or [site:*]. Defaults to TRUE.
      'global_types' => FALSE,
      // A boolean whether to include the 'Click this token to insert in into the the focused textfield' JavaScript functionality. Defaults to TRUE.
      'click_insert' => TRUE
    )
  );

  $notification['user_chapter_join_notify_leaders'] = array(
    'title' => 'Notify chapter leaders that a new member joined',
    'description' => 'Send chapter leaders a notification about a new member',
    'use_cron' => FALSE,
    'tokens' => array(
      // The token types that have specific context. Can be multiple token types like 'term' and/or 'user'
      'token_types' => array('node', 'current-user'),
      // A boolean TRUE or FALSE whether to include 'global' context tokens like [current-user:*] or [site:*]. Defaults to TRUE.
      'global_types' => FALSE,
      // A boolean whether to include the 'Click this token to insert in into the the focused textfield' JavaScript functionality. Defaults to TRUE.
      'click_insert' => TRUE
    )
  );
  
  $notification['user_chapter_announcements'] = array(
    'title' => 'Send members Chapter Announcements',
    'description' => 'Send members Chapter Announcements',
    'use_cron' => FALSE,
    'tokens' => array(
      // The token types that have specific context. Can be multiple token types like 'term' and/or 'user'
      'token_types' => array('node', 'current-user'),
      // A boolean TRUE or FALSE whether to include 'global' context tokens like [current-user:*] or [site:*]. Defaults to TRUE.
      'global_types' => FALSE,
      // A boolean whether to include the 'Click this token to insert in into the the focused textfield' JavaScript functionality. Defaults to TRUE.
      'click_insert' => TRUE
    )
  );
  

  return $notification;
}

/**
 * Implement hook_flag_flag()
 */
function tm_notifications_chapter_flag_flag($flag, $entity_id, $account, $flagging) {
  // We want to target the signup flag on nodes.
  if ($flag->name == 'signup' && $flag->entity_type == 'node') {
    $node = node_load($entity_id);
    // Only for event nodes.
    if ($node->type == 'chapter') {

      // send welcome message to the user
      tm_notifications_notify('user_chapter_join_welcome_member', $account, array('node' => $node));

      // notify each owner of the organizational profile that they have a new follower
      foreach ($node->field_chapter_leaders['und'] as $leader) {
        $leader = user_load($leader['target_id']);

        // set profile url (either friendly url or community url)
        $who_joined = user_load($account->uid);
        $profile_url = "community/" . $who_followed->name;
        if (count($who_joined->field_friendly_url) > 0) { 
          $profile_url = $who_joined->field_friendly_url['und']['0']['value'];
        } 

        tm_notifications_notify('user_chapter_join_notify_leaders', $leader, array('node' => $node, 'user' => $leader, '__PROFILE_URL__' => $profile_url));
      }
    }
  }
}
