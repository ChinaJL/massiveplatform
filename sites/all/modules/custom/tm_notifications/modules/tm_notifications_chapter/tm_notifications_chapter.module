<?php
/**
 * @file
 * Code for the TM Notifications Chapter feature.
 */

include_once 'tm_notifications_chapter.features.inc';

/**
 * Implements hook_tm_notif_info()
 */
function tm_notifications_chapter_tm_notif_info() {
  $notification = array();

  $notification['user_chapter_join_welcome_member'] = array(
    'title' => 'Member joined chapter',
    'description' => 'Welcome message when joining a chapter',
    'use_cron' => FALSE,
    'tokens' => array(
      // The token types that have specific context. Can be multiple token types like 'term' and/or 'user'
      'token_types' => array('node', 'current-user'),
      // A boolean TRUE or FALSE whether to include 'global' context tokens like [current-user:*] or [site:*]. Defaults to TRUE.
      'global_types' => FALSE,
      // A boolean whether to include the 'Click this token to insert in into the the focused textfield' JavaScript functionality. Defaults to TRUE.
      'click_insert' => TRUE
    )
  );

  $notification['user_chapter_join_notify_leaders'] = array(
    'title' => 'Notify chapter leaders that a new member joined',
    'description' => '[Chapter Leaders] Notify when new member joins your chapter',
    'use_cron' => FALSE,
    'tokens' => array(
      // The token types that have specific context. Can be multiple token types like 'term' and/or 'user'
      'token_types' => array('node', 'current-user'),
      // A boolean TRUE or FALSE whether to include 'global' context tokens like [current-user:*] or [site:*]. Defaults to TRUE.
      'global_types' => FALSE,
      // A boolean whether to include the 'Click this token to insert in into the the focused textfield' JavaScript functionality. Defaults to TRUE.
      'click_insert' => TRUE
    )
  );
  
  $notification['user_chapter_announcements'] = array(
    'title' => 'Send members Chapter Announcements',
    'description' => 'Chapter and Event Announcements',
    'use_cron' => FALSE,
    'tokens' => array(
      // The token types that have specific context. Can be multiple token types like 'term' and/or 'user'
      'token_types' => array('node', 'current-user'),
      // A boolean TRUE or FALSE whether to include 'global' context tokens like [current-user:*] or [site:*]. Defaults to TRUE.
      'global_types' => FALSE,
      // A boolean whether to include the 'Click this token to insert in into the the focused textfield' JavaScript functionality. Defaults to TRUE.
      'click_insert' => TRUE
    )
  );
  

  return $notification;
}

/**
 * Implement hook_flag_flag()
 */
function tm_notifications_chapter_flag_flag($flag, $entity_id, $account, $flagging) {

  // We want to target the signup flag on nodes.
  if ($flag->name == 'signup' && $flag->entity_type == 'node') {

    $node = node_load($entity_id);

    // Only for event nodes.
    if ($node->type == 'chapter') {

      // send welcome message to the user
      // set profile url (either friendly url or community url)
      $who_joined = user_load($account->uid);

      // get user first name and last name
      // we can't always rely on current-user token as user can sign up to chapters on signup
      $first_name = strip_tags($who_joined->field_user_first_name['und'][0]['value']);
      $last_name = strip_tags($who_joined->field_user_last_name['und'][0]['value']);

      // get welcome message
      $welcome_message = "";
      if (isset($node->field_join_chapter_message['und'][0]['value'])) {
        $welcome_message = trim(strip_tags(check_plain($node->field_join_chapter_message['und'][0]['value'])));
        $welcome_message = str_replace("\n", "<br>", $welcome_message); // add line breaks
        if ($welcome_message != "") {
          $welcome_message = "<br><strong>Here's a welcome message from your local Chapter Leaders:</strong><p>" . $welcome_message . "</p>";
        }
      }

      // get formal chapter name
      $chapter_name = tm_chapters_formal_name($node);

      // Chapter hero image
      global $conf;
      if (isset($node->field_image[LANGUAGE_NONE][0]['uri'])) {
        $chapter_image_src = image_style_url("banner", $node->field_image[LANGUAGE_NONE][0]['uri']);
      } else {
        $default_image_uri = _tm_chapters_get_default_image($conf["tm_images_default_field_image"], $node->nid);
        $chapter_image_src = image_style_url("banner", $default_image_uri);
      }

      $chapter_url = $conf["tm_email_server_http"] . "://" . $conf["tm_email_server_url_domain"] . "/" . drupal_get_path_alias('node/' . $node->nid);

      $chapter_image_html = tm_notifications_render_hero_image_html($chapter_image_src, $chapter_url, $chapter_name);


      tm_notifications_notify('user_chapter_join_welcome_member', $account, array('node' => $node, '__USER_FIRST_NAME__' => $first_name, '__USER_LAST_NAME__' => $last_name, '__WELCOME_MESSAGE__' => $welcome_message, '__CHAPTER_NAME__' => $chapter_name, '__HERO_IMAGE__' => $chapter_image_html));

      // notify each owner of the chapter that they have a new member
      if (isset($node->field_chapter_leaders[LANGUAGE_NONE])) {
        foreach ($node->field_chapter_leaders[LANGUAGE_NONE] as $leader) {
          $leader = user_load($leader['target_id']);

          // don't send notification if the user is null
          // if the chapter doesn't have any chapter leaders
          if ($leader == null) { continue; }

          $profile_url = drupal_get_path_alias("user/" . $who_joined->uid);

          tm_notifications_notify('user_chapter_join_notify_leaders', $leader, array('node' => $node, 'user' => $leader, '__PROFILE_URL__' => $profile_url, '__USER_FIRST_NAME__' => $first_name, '__USER_LAST_NAME__' => $last_name, '__HERO_IMAGE__' => $chapter_image_html));
        }
      }
    }
  }
}

