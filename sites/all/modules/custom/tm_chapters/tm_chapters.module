<?php
/**
 * @file
 * Code for the TM Chapters feature.
 */

include_once 'tm_chapters.features.inc';

/**
 * Implement hook_ds_field_info()
 */
function tm_chapters_ds_fields_info($entity_type) {
  if ($entity_type != 'node') {
    return;
  }
  $fields = array();

  $fields['tm_ds_members_chapter'] = array(
    'title' => t('Amount chapter members'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'ui_limit' => array('chapter|full'),
    'function' => '_tm_members_chapter'
  );

  return array($entity_type => $fields);
}

/**
 * Custom function to print the amount of members belonging to a chapter
 */
function _tm_members_chapter($field, $title = NULL) {
  $flag = flag_get_flag('signup');
  $amount_members = $flag->get_count($field['entity']->nid);
  return $amount_members ? format_plural($amount_members, '1 member.','@members members', array('@members' => $amount_members)) : t('No members yet');
}

/* 
 * Alters a node on saving to make sure the leaders have the correct role
 */
function tm_chapters_node_presave($node){
  $role_name = 'chapter leader';
  if ($role = user_role_load_by_name($role_name)) {
    foreach ($node->field_chapter_leaders[LANGUAGE_NONE] as $target){
      $user = user_load($target['target_id']);
      // make sure all chapter leaders have the right role set
      user_multiple_role_edit(array($user->uid), 'add_role', $role->rid);
    }
    // should also check $node->original for users being *removed*
    $original = flatten_chapter_leaders($node->original->field_chapter_leaders[LANGUAGE_NONE]);
    $new = flatten_chapter_leaders($node->field_chapter_leaders[LANGUAGE_NONE]);
    $removed = array_diff($original, $new);
    foreach ($removed as $rem){
      user_multiple_role_edit(array($rem), 'remove_role', $role->rid);
    }
  }
}
// array diff didn't like 2 dimensional arrays
function flatten_chapter_leaders($array){
  foreach ($array as $item){
    $newarray[] = $item['target_id'];
  }
  return $newarray;
}