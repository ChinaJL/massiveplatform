<?php
/**
 * @file
 * Code for the tm_newsfeed feature.
 */

/*
* Implements hook_menu()
*/
function tm_notifications_newsfeed_menu() {
  $items['newsfeed'] = array(
    'title' => 'Network Updates',
    'page callback' => 'tm_newsfeed_test',
    'page arguments' => array(1),
    'access callback' => 'tm_newsfeed_test_callback',
    'type' => MENU_CALLBACK,
  );

  $items['user/%user/update_status'] = array(
    'title' => 'Send message',
    'page callback' => 'tm_newsfeed_post_user_update_ajax',
    'page arguments' => array(1),
    'access callback' => 'tm_newsfeed_check_user_post_update',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/* Approval callback for test callback */
function tm_newsfeed_test_callback() {
  return true;
}

function tm_newsfeed_test() {
 
  global $user;

  $html = "";

  $html .= "<li><a href='javascript:jq_newsfeed_user_status_update(" . $user->uid . ");'>Post update</a></li>";
  $html .= "<li>Your profile stats";
  $html .= "<li>Upcoming events in chapters that you are a member of (and conferences)";
  $html .= "<li>Recent blog articles (via API)";
  $html .= "<li>Popular discussion articles (via API)";
  $html .= "<li>Members who followed you";
  $html .= "<li>New members in your chapter(s)";
  $html .= "<li>New companies created by members in your chapter(s)";
  $html .= "<li>If you have a company then show new followers of company (or separate company report..?)";
  $html .= "<li>Top members in your chapter (by number of followers)";

  return $html;
}

/* Check if its possible for user to post an update */
function tm_newsfeed_check_user_post_update($uid) {

  return true;

  global $user;
  global $conf;

  // need to be logged in
  if (!user_is_logged_in()) {
    return false;
  }

  // check if messaging is enabled
  if (!$conf["tm_newsfeed_enabled"]) {
    return false;
  }

  // check its your uid
  if ($user->uid != $uid) {
    return false;
  }
 
  // sender need to be approved member
  /*if (!in_array("approved user", $user->roles)) { 
    return false;
  }*/

  // ok, we can post update
  return true;
}

/* Post update */
/* tm_newsfeed_check_post_user_update should be called first to ensure they can send a message */
/* returns array. ie: array("result" => false, "error_message" => "something"); */
function tm_newsfeed_post_user_update_ajax() {

  global $conf;

  // get posting uid from url
  // ie: /user/10527/post_update
  $uid = arg(1);

  // Load user posting update
  $posting_user = user_load($uid);
  if ($posting_user == false) {
    $ret = array("result" => false, "error_message" => "Unable to retrieve user account");
    drupal_json_output($ret);
    return;
  }

  // Get status update
  $status_update = trim($_POST["update_status"]);
 
  // Softfail if update too short
  if (strlen($status_update) < 3) {
    $ret = array("result" => false, "error_message" => "Update is too short.");
    drupal_json_output($ret);
    return;
  }

  // Softfail if update too long
  if (strlen($status_update) > 250) {
    $ret = array("result" => false, "error_message" => "Update is too long.");
    drupal_json_output($ret);
    return;
  }

  // Update status in database
  $invite = db_insert('tm_newsfeed_status_updates')
    ->fields(array(
      'entity_id' => $posting_user->uid,
      'entity_type' => 'user',
      'status_update' => trim($status_update),
      //'created' => 'NOW',
      //'latitude' => '',
      //'longitude' => '',
      'poster_uid' => $posting_user->uid,
    ))
    ->execute();

  // Flag user as having updated status
  $flag = flag_get_flag('newsfeed_user_status_updated');
  $flag->flag("unflag", $posting_user->uid); // unflag so we can flag again
  $flag->flag("flag", $posting_user->uid);

  // Updated successfully
  $ret = array("result" => true, "error_message" => null);
  drupal_json_output($ret);
  return;
}

/* Add js */
function tm_newsfeed_init() {
  drupal_add_js(drupal_get_path('module', 'tm_newsfeed') . '/js/tm_newsfeed.js');
}

?>