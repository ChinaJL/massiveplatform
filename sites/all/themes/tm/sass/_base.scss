// Set box-sizing globally to handle padding and border widths
// Originally included in the html-classes of Foundation, but we're not loading
// those.

html, body {
  height: 100%;
  font-size: $base-font-size;
}

body {
  background: $body-bg;
  color: $body-font-color;
  font-family: $body-font-family;
  font-weight: $body-font-weight;
  font-style: $body-font-style;
  position: relative;
  cursor: $cursor-default-value;
}

*,
*:before,
*:after {
  @include box-sizing(border-box);
}

.row {
  @media #{$small-up} {	
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

a:link,
a:visited,
button {
  @include transform(translate3d(0, 0, 0));
  @include transition-property(opacity, top, left, right);
  @include transition-duration(0.2s, 0.1s, 0.2s, 0.2s);
  @include transition-timing-function(ease, ease, ease, ease);
  @include transition-delay(0, 0, 0, 0);
  cursor: pointer;
  color: $secondary-color;
  text-decoration: none;
}

a:hover,
a:focus,
button:hover {
  outline: none;
  opacity: 0.7;
}

a:active,
button:active {
  position: relative;
  top: 2px;
}

a.disabled, .bttn.disabled {
  opacity: 0.4;
  cursor: default;
  &:hover, &:focus {
    opacity: 0.4;
  }
}

/* ==========================================================================
   Helpers
   ========================================================================== */

.visually-hidden {
  border: 0 none;
  clip: rect(0px, 0px, 0px, 0px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/* ==========================================================================
   Type
   ========================================================================== */



/* ==========================================================================
   Main structure - grid, margins and things alike
   ========================================================================== */

#header {
  position: relative;
  z-index: 10;
  background: #FFF;
  box-shadow: 0 2px 0 0 rgba($primary-color, 0.1);
  .row {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
}

#site-title {
  @include grid-column(10);
  margin: 0;
  a {
    float: left;
  }
  span {
    @extend .visually-hidden;
  }
  img {
    display: block;
    height: 3rem;
  }
}

#primary {
  @include grid-column(2); 
}
@media #{$medium-up} {
  #site-title {
    @include grid-column(4);
  }
  #primary {
    @include grid-column(8); 
  }    
}

// #content spans 12 cols to make sure anything that ends up there abides to
// the grid. Make sure to include a nested row around layouts that implement
// more columns inside of content.

#content {
  @include grid-column(12); 
  
  // Display Suite layout Trilithon
  .trilithon {
    @include grid-row($behavior: nest);
    .banner,
    .column {
      @include grid-column(12);
    }
    @media #{$medium-up} {
      .column {
        @include grid-column(6);
      }
    }
  }

  // Mostly used by hubs (implemented with Views)
  .grid {
    ul {
      @include grid-row($behavior: nest);
      padding: 0;
    }
    li {
      @include grid-column(12);
      list-style: none;
    }
    @media #{$small-up} {
      li {
        @include grid-column(6);
        &:nth-child(2n+1) {
          clear: left;
        }
      }
    }
    @media #{$medium-up} {
      li {
        @include grid-column(4);
        &:nth-child(2n+1) {
          clear: none;
        }
        &:nth-child(3n+1) {
          clear: left;
        }
      }
    }
    @media #{$large-up} {
      li {
        @include grid-column(3);
        &:nth-child(3n+1) {
          clear: none;
        }
        &:nth-child(4n+1) {
          clear: left;
        }
      }
    }
  }
}

#footer {
}

/* ==========================================================================
   Styles
   ========================================================================== */

#page {
  background-color: #d3d6d9;
}

#header {
  background-color: #fff;
  #site-title {
  }
  #primary {
  }
}

#main {
  background-color: #e9eaec;
}

#footer {
  background-color: #d3d6d9;
}